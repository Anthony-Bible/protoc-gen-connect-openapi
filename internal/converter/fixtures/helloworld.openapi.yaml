openapi: 3.1.0
info:
  description: ""
  title: helloworld
  version: ""
paths:
  /helloworld.Greeter/SayHello:
    get:
      description: Sends a greeting
      parameters:
      - $ref: '#/components/parameters/helloworld.Greeter.SayHello.helloworld.HelloRequest'
      - $ref: '#/components/parameters/encoding'
      - $ref: '#/components/parameters/base64'
      - $ref: '#/components/parameters/compression'
      - $ref: '#/components/parameters/connect'
      responses:
        "200":
          $ref: '#/components/responses/helloworld.Greeter.SayHello.helloworld.HelloReply'
        default:
          $ref: '#/components/responses/connect.error'
      tags:
      - helloworld.Greeter
  /helloworld.Greeter/WriteHello:
    post:
      description: Writes a greeting (has side effects)
      requestBody:
        $ref: '#/components/requestBodies/helloworld.Greeter.WriteHello.helloworld.HelloRequest'
      responses:
        "200":
          $ref: '#/components/responses/helloworld.Greeter.WriteHello.helloworld.HelloReply'
        default:
          $ref: '#/components/responses/connect.error'
      tags:
      - helloworld.Greeter
components:
  parameters:
    base64:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/base64'
        application/proto:
          schema:
            $ref: '#/components/schemas/base64'
      in: query
      name: base64
    compression:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/compression'
        application/proto:
          schema:
            $ref: '#/components/schemas/compression'
      in: query
      name: compression
    connect:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/connect'
        application/proto:
          schema:
            $ref: '#/components/schemas/connect'
      in: query
      name: connect
    encoding:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/encoding'
        application/proto:
          schema:
            $ref: '#/components/schemas/encoding'
      in: query
      name: encoding
    helloworld.Greeter.SayHello.helloworld.HelloRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/helloworld.HelloRequest'
        application/proto:
          schema:
            $ref: '#/components/schemas/helloworld.HelloRequest'
      in: query
      name: message
  requestBodies:
    helloworld.Greeter.WriteHello.helloworld.HelloRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/helloworld.HelloRequest'
        application/proto:
          schema:
            $ref: '#/components/schemas/helloworld.HelloRequest'
      required: true
  responses:
    connect.error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/connect.error'
        application/proto:
          schema:
            $ref: '#/components/schemas/connect.error'
      description: ""
    helloworld.Greeter.SayHello.helloworld.HelloReply:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/helloworld.HelloReply'
        application/proto:
          schema:
            $ref: '#/components/schemas/helloworld.HelloReply'
      description: ""
    helloworld.Greeter.WriteHello.helloworld.HelloReply:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/helloworld.HelloReply'
        application/proto:
          schema:
            $ref: '#/components/schemas/helloworld.HelloReply'
      description: ""
  schemas:
    base64:
      description: Specifies if the message query param is base64 encoded, which may
        be required for binary data
      title: base64
      type: boolean
    compression:
      description: Which compression algorithm to use for this request
      enum:
      - identity
      - gzip
      - br
      - zstd
      title: compression
    connect:
      description: Which version of connect to use.
      enum:
      - "1"
      title: connect
    connect.error:
      additionalProperties: false
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
      properties:
        code:
          enum:
          - CodeCanceled
          - CodeUnknown
          - CodeInvalidArgument
          - CodeDeadlineExceeded
          - CodeNotFound
          - CodeAlreadyExists
          - CodePermissionDenied
          - CodeResourceExhausted
          - CodeFailedPrecondition
          - CodeAborted
          - CodeOutOfRange
          - CodeInternal
          - CodeUnavailable
          - CodeDataLoss
          - CodeUnauthenticated
          examples:
          - CodeNotFound
          type: string
        message:
          type: string
      title: Connect Error
      type: object
    encoding:
      description: Define which encoding or 'Message-Codec' to use
      enum:
      - proto
      - json
      title: encoding
    helloworld.HelloReply:
      additionalProperties: false
      description: The response message containing the greetings
      properties:
        message:
          additionalProperties: false
          description: ""
          title: message
          type: string
      title: HelloReply
      type: object
    helloworld.HelloRequest:
      additionalProperties: false
      description: The request message containing the user's name.
      properties:
        name:
          additionalProperties: false
          description: ""
          title: name
          type: string
      title: HelloRequest
      type: object
tags:
- description: The greeting service definition.
  name: helloworld.Greeter
