openapi: 3.1.0
info:
  title: io.swagger.petstore.v2
paths:
  /pet/{pet_id}:
    get:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.GetPetByID
      parameters:
        - name: petId
          in: query
          schema:
            oneOf:
              - type: string
              - type: number
            title: pet_id
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
    post:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.UpdatePetWithForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.UpdatePetWithFormReq'
          application/proto:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.UpdatePetWithFormReq'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    delete:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.DeletePet
      parameters:
        - name: petId
          in: query
          schema:
            oneOf:
              - type: string
              - type: number
            title: pet_id
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /pet/{pet_id}/uploadImage:
    post:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.UploadFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.UploadFileReq'
          application/proto:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.UploadFileReq'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.ApiResponse'
  /pet:
    put:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.UpdatePet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
          application/proto:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
    post:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.AddPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
          application/proto:
            schema:
              $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
  /pet/findByTags:
    get:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.FindPetsByTag
      parameters:
        - name: tag
          in: query
          schema:
            type: array
            items:
              type: string
              title: tag
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.Pets'
  /pet/findByStatus:
    get:
      tags:
        - io.swagger.petstore.v2.PetService
      operationId: io.swagger.petstore.v2.PetService.FindPetsByStatus
      parameters:
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
              title: status
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/io.swagger.petstore.v2.Pets'
components:
  schemas:
    io.swagger.petstore.v2.Status:
      type: string
      title: Status
      enum:
        - unknown
        - available
        - pending
        - sold
      description: |-
        These do not use standard naming practices in order to match
         the JSON format of the Pet Store Open API schema, which uses
         lower-case names for these constants.
    google.protobuf.Empty:
      type: object
      description: |-
        A generic empty message that you can re-use to avoid defining duplicated
         empty messages in your APIs. A typical example is to use it as the request
         or the response type of an API method. For instance:

             service Foo {
               rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
             }
    io.swagger.petstore.v2.ApiResponse:
      type: object
      properties:
        code:
          type: integer
          title: code
        type:
          type: string
          title: type
        message:
          type: string
          title: message
      title: ApiResponse
      additionalProperties: false
    io.swagger.petstore.v2.Category:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - type: number
          title: id
        name:
          type: string
          title: name
      title: Category
      additionalProperties: false
    io.swagger.petstore.v2.Pet:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - type: number
          title: id
        category:
          $ref: '#/components/schemas/io.swagger.petstore.v2.Category'
        name:
          type: string
          title: name
        photoUrls:
          type: array
          items:
            type: string
            title: photo_urls
        tags:
          type: array
          items:
            $ref: '#/components/schemas/io.swagger.petstore.v2.Tag'
        status:
          type: string
          title: status
      title: Pet
      additionalProperties: false
    io.swagger.petstore.v2.PetBody:
      type: object
      properties:
        petId:
          oneOf:
            - type: string
            - type: number
          title: pet_id
        body:
          type: string
          title: body
      title: PetBody
      additionalProperties: false
    io.swagger.petstore.v2.PetID:
      type: object
      properties:
        petId:
          oneOf:
            - type: string
            - type: number
          title: pet_id
      title: PetID
      additionalProperties: false
    io.swagger.petstore.v2.Pets:
      type: object
      properties:
        pets:
          type: array
          items:
            $ref: '#/components/schemas/io.swagger.petstore.v2.Pet'
      title: Pets
      additionalProperties: false
    io.swagger.petstore.v2.StatusReq:
      type: object
      properties:
        status:
          type: array
          items:
            type: string
            title: status
      title: StatusReq
      additionalProperties: false
    io.swagger.petstore.v2.Tag:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - type: number
          title: id
        name:
          type: string
          title: name
      title: Tag
      additionalProperties: false
    io.swagger.petstore.v2.TagReq:
      type: object
      properties:
        tag:
          type: array
          items:
            type: string
            title: tag
      title: TagReq
      additionalProperties: false
    io.swagger.petstore.v2.UpdatePetWithFormReq:
      type: object
      properties:
        petId:
          oneOf:
            - type: string
            - type: number
          title: pet_id
        name:
          type: string
          title: name
        status:
          type: string
          title: status
      title: UpdatePetWithFormReq
      additionalProperties: false
    io.swagger.petstore.v2.UploadFileReq:
      type: object
      properties:
        petId:
          oneOf:
            - type: string
            - type: number
          title: pet_id
        additionalMetadata:
          type: string
          title: additional_metadata
        file:
          type: string
          title: file
      title: UploadFileReq
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    encoding:
      title: encoding
      enum:
        - proto
        - json
      description: Define which encoding or 'Message-Codec' to use
    base64:
      type: boolean
      title: base64
      description: Specifies if the message query param is base64 encoded, which may be required for binary data
    compression:
      title: compression
      enum:
        - identity
        - gzip
        - br
      description: Which compression algorithm to use for this request
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - CodeNotFound
          enum:
            - CodeCanceled
            - CodeUnknown
            - CodeInvalidArgument
            - CodeDeadlineExceeded
            - CodeNotFound
            - CodeAlreadyExists
            - CodePermissionDenied
            - CodeResourceExhausted
            - CodeFailedPrecondition
            - CodeAborted
            - CodeOutOfRange
            - CodeInternal
            - CodeUnavailable
            - CodeDataLoss
            - CodeUnauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: io.swagger.petstore.v2.PetService
